#1 Format:

spec: http://apostate.com/programming/vb-format-syntax.html

The following items can have a format: Measure, CalculatedMember.

Format strings can either be named, or be a string of formatting elements.

In both cases, the format can be specified either via the "formatString" attribute, or with a CalculatedMemberProperty child element having a "name" attribute with the value "FORMAT_STRING" .

The format can be specified either as a static string value or as an expression.

A format expression is stored in the "expression" attribute of the CalculatedMemberProperty.
A static format string can either be stored in the "formatString" attribue of the Measure or CalculatedMember element itself, or it may be stored in the "value" attribute of the CalculatedMemberProperty child element.

#2 Dimension management:

- make a private dimension a shared dimension
- make a private dimension out of a dimension usage.
- drag shared dimension unto the graphical query canvas (to create a new dimension usage);

#3 Drag and drop actions

- drag shared dimension from the schema tree view unto cube diagram
  * droptarget diagram: create a new dimension usage
  * droptarget fact table column: create a new dimension usage and make the drop column the foreign key
- drag and drop within the mondrian tree:

  target: schema:
    source: schema: offer to merge source schema unto target schema
    source: dimension, cube, virtualcube: if from another schema, offer to import that item
  target: cube:
    source cube: offer to replace (merge?) source cube unto target cube.
    source dimension:

#4 DWH management

Currently the editor is envisioned as a cube editor only - the existence of a database connection, and database objects is presumed.
It would be cool if we could use the editor to actually design the datamart at the database level.
This would allow a user to design the backing dwh schema from a olap designer's perspective.

#5 schema / DWH optimization

It could be cool if the editor could be used to optimize a schema. What this means:
- add / create aggregate tables
- turn <View> elements into physical tables + ETL procedures
- turn Measure Expressions into physical columns

#6 Selection, alignment for query graph

Would be nice to select multiple objects on the query graph to move them around all at once.
Would be nice to be able to horizontally or vertially align multiple objects in the selection on a query graph.

#7 Access control / role management

We should be able to assign roles / privileges
Would be nice to create new roles.

#12
Support for analyzer specific Annotations
o    AnalyzerDateFormat: http://help.pentaho.com/Documentation/5.1/0N0/020/070/030/000
o    AnalyzerBusinessGroup: http://help.pentaho.com/Documentation/5.1/0N0/020/070/020/010
o    AnalyzerCustomAction: http://help.pentaho.com/Documentation/5.1/0N0/020/070/030/Configuring_Custom_Analyzer_Actions

#13 support for conditional formatting.
Conditional Formatting: http://help.pentaho.com/Documentation/5.1/0N0/020/090/060/010/000

#15 Automatically set level type according to JDBC data type of level key column.

#16 Support for virtual cubes.

#18 Make the levels in the hierarchy diagram collapsible so as to hide all the "extra" columns.

#19 Add the data type to the levels in the hierarchy diagram

#21 Validation of the schema.

#23 Maybe use one "coordinates" annotation element instead of a separate x and y element. Schemas get crowded quickly.

#24 "Flashing" when the diagram is rebuilt. Instead of clearing the diagram, we should try and more intelligently replace only the objects that changed.

#25: In the cube diagram, dragging a column out of the fact table and dropping it on the canvas could trigger an action to create a measure or a dimension. We should probably pop up a dialog to ask the user what they want, and we could choose a default intelligently by looking at the column properties

#26 when connecting a measure to the fact table we should detect the data type of the column and decide whether it makes sense to make a measure out of it. If not, we should popup a dialog to confirm the user's choice.

#27 When refreshing the code view, scroll back to the original position.

#28 support for localization http://infocenter.pentaho.com/help/topic/analysis_guide/task_schema_localization.html

#29 Dependencies:

Cube:
  virtual cubes (cube usage).
Shared Dimension:
  virtual cube (virtual cube dimension).
  cube (dimension usage)
Measure
  virtual cube (virtual cube measure)
  calculated member (referenced in formula)
  named set (referenced in formula)
Calculated Member
  virtual cube (virtual cube measure)
  calculated member (referenced in formula)
  named set (referenced in formula)
Level
  Dimension Usage (joined at level)
  Calculated Member (referenced in formula)
  Named Set (referenced in formula)
Dimension Usage
  virtual cubes (virtual cube dimension).
  Calculated Member (referenced in formula)
  Named Set (referenced in formula)
Private Dimension
  virtual cubes (virtual cube dimension).
  Calculated Member (referenced in formula)
  Named Set (referenced in formula)
Hierarchy
  Calculated Member (hierarchy)

#30 Level Properties in the Hierarchy Diagram

#31 support for Aggregate tables

Should be in the cube diagram

#32 support for closure tables

Should be in the Hierarchy diagram

#33 Add an "edit" button next to all fields controls (combos) that reference a schema object to quickly open the corresponding object in its editor and edit it.

#34 Would be nice to have a table data preview / data profile

#35 diagram does not take scrolling into account - misaligned relationships if the content is larger than the viewport.